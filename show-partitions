#!/usr/bin/python

import	os

devices = dict()
sysdir = '/sys/block'
max_start_width = 0
max_size_width = 0
for dn in sorted( os.listdir( sysdir ) ):
    bdev = os.path.join( sysdir, dn )
    first = True
    kind = '83'
    partitions = dict()
    for pn in sorted( os.listdir( bdev ) ):
        fn = os.path.join( bdev, pn, 'start' )
        if not os.path.isfile( fn ): continue
        with open( fn ) as f:
            starts_on = f.readline().rstrip()
        fn = os.path.join( bdev, pn, 'size' )
        if not os.path.isfile( fn ): continue
        with open( fn ) as f:
            blocks_in = f.readline().rstrip()
        partitions[ pn ] = dict({ 'start' : starts_on, 'size' : blocks_in })
        max_start_width = max(
            max_start_width,
            len( starts_on )
        )
        max_size_width = max(
            max_size_width,
            len( blocks_in )
        )
    if len(partitions):
        devices[ bdev ] = partitions
#
max_name_width = max(
    map(
        len,
        devices
    )
)
fmt_name = '{{0:>{0}}}'.format( max_name_width )
fmt_start = '{{0:>{0}}}'.format( max_start_width )
fmt_size  = '{{0:>{0}}}'.format( max_size_width )
#
fmt_all = '{0} {1} {2}'
print fmt_all.format(
    fmt_name.format( 'Device' ),
    fmt_start.format( 'Start' ),
    fmt_size.format( 'Blocks' ),
)
print fmt_all.format(
    fmt_name.format( '=' * max_name_width ),
    fmt_start.format( '=' * max_start_width ),
    fmt_size.format( '=' * max_size_width ),
)
for dev in sorted( devices ):
    partitions = devices[ dev ]
    print
    for pn in sorted( partitions ):
        partition = partitions[ pn ]
        print fmt_all.format(
            fmt_name.format(
                '/dev/{0}'.format( pn )
            ),
            fmt_start.format( partition['start'] ),
            fmt_size.format( partition['size'] ),
        )
